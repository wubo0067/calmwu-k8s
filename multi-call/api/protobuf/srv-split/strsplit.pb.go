// Code generated by protoc-gen-go. DO NOT EDIT.
// source: server-a/strsplit.proto

package sci_v1_svr_strsplit

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type StrSplitReq struct {
	OriginalString       string   `protobuf:"bytes,1,opt,name=originalString,proto3" json:"originalString,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrSplitReq) Reset()         { *m = StrSplitReq{} }
func (m *StrSplitReq) String() string { return proto.CompactTextString(m) }
func (*StrSplitReq) ProtoMessage()    {}
func (*StrSplitReq) Descriptor() ([]byte, []int) {
	return fileDescriptor_631af6d9c3637286, []int{0}
}

func (m *StrSplitReq) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrSplitReq.Unmarshal(m, b)
}
func (m *StrSplitReq) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrSplitReq.Marshal(b, m, deterministic)
}
func (m *StrSplitReq) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrSplitReq.Merge(m, src)
}
func (m *StrSplitReq) XXX_Size() int {
	return xxx_messageInfo_StrSplitReq.Size(m)
}
func (m *StrSplitReq) XXX_DiscardUnknown() {
	xxx_messageInfo_StrSplitReq.DiscardUnknown(m)
}

var xxx_messageInfo_StrSplitReq proto.InternalMessageInfo

func (m *StrSplitReq) GetOriginalString() string {
	if m != nil {
		return m.OriginalString
	}
	return ""
}

type StrSplitRes struct {
	SplitStrs            []string `protobuf:"bytes,1,rep,name=splitStrs,proto3" json:"splitStrs,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *StrSplitRes) Reset()         { *m = StrSplitRes{} }
func (m *StrSplitRes) String() string { return proto.CompactTextString(m) }
func (*StrSplitRes) ProtoMessage()    {}
func (*StrSplitRes) Descriptor() ([]byte, []int) {
	return fileDescriptor_631af6d9c3637286, []int{1}
}

func (m *StrSplitRes) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_StrSplitRes.Unmarshal(m, b)
}
func (m *StrSplitRes) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_StrSplitRes.Marshal(b, m, deterministic)
}
func (m *StrSplitRes) XXX_Merge(src proto.Message) {
	xxx_messageInfo_StrSplitRes.Merge(m, src)
}
func (m *StrSplitRes) XXX_Size() int {
	return xxx_messageInfo_StrSplitRes.Size(m)
}
func (m *StrSplitRes) XXX_DiscardUnknown() {
	xxx_messageInfo_StrSplitRes.DiscardUnknown(m)
}

var xxx_messageInfo_StrSplitRes proto.InternalMessageInfo

func (m *StrSplitRes) GetSplitStrs() []string {
	if m != nil {
		return m.SplitStrs
	}
	return nil
}

func init() {
	proto.RegisterType((*StrSplitReq)(nil), "sci.v1.svr.strsplit.StrSplitReq")
	proto.RegisterType((*StrSplitRes)(nil), "sci.v1.svr.strsplit.StrSplitRes")
}

func init() { proto.RegisterFile("server-a/strsplit.proto", fileDescriptor_631af6d9c3637286) }

var fileDescriptor_631af6d9c3637286 = []byte{
	// 167 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x12, 0x2f, 0x4e, 0x2d, 0x2a,
	0x4b, 0x2d, 0xd2, 0x4d, 0xd4, 0x2f, 0x2e, 0x29, 0x2a, 0x2e, 0xc8, 0xc9, 0x2c, 0xd1, 0x2b, 0x28,
	0xca, 0x2f, 0xc9, 0x17, 0x12, 0x2e, 0x4e, 0xce, 0xd4, 0x2b, 0x33, 0xd4, 0x2b, 0x2e, 0x2b, 0xd2,
	0x83, 0x49, 0x29, 0x99, 0x72, 0x71, 0x07, 0x97, 0x14, 0x05, 0x83, 0xd8, 0x41, 0xa9, 0x85, 0x42,
	0x6a, 0x5c, 0x7c, 0xf9, 0x45, 0x99, 0xe9, 0x99, 0x79, 0x89, 0x39, 0xc1, 0x25, 0x45, 0x99, 0x79,
	0xe9, 0x12, 0x8c, 0x0a, 0x8c, 0x1a, 0x9c, 0x41, 0x68, 0xa2, 0x4a, 0xda, 0xc8, 0xda, 0x8a, 0x85,
	0x64, 0xb8, 0x38, 0xc1, 0xc6, 0x05, 0x97, 0x14, 0x15, 0x4b, 0x30, 0x2a, 0x30, 0x6b, 0x70, 0x06,
	0x21, 0x04, 0x8c, 0x12, 0xb8, 0xf8, 0x61, 0x8a, 0x03, 0x8a, 0xf2, 0x93, 0x53, 0x8b, 0x8b, 0x85,
	0x7c, 0xb9, 0x58, 0xc1, 0x7c, 0x21, 0x05, 0x3d, 0x2c, 0xae, 0xd2, 0x43, 0x72, 0x92, 0x14, 0x21,
	0x15, 0xc5, 0x4a, 0x0c, 0x49, 0x6c, 0x60, 0x1f, 0x1a, 0x03, 0x02, 0x00, 0x00, 0xff, 0xff, 0x79,
	0xb3, 0xb9, 0x92, 0xfc, 0x00, 0x00, 0x00,
}
