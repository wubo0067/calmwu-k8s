apiVersion: apps/v1
kind: Deployment
metadata:
  name: webhook-calm-server
  namespace: default
  labels:
    app: webhook-calm-server
  annotations:
    io.kubernetes.cri.untrusted-workload: "true"    
spec:
  replicas: 1
  selector:
    matchLabels:
      app: webhook-calm-server
  template:
    metadata:
      labels:
        app: webhook-calm-server
      annotations:
        io.kubernetes.cri.untrusted-workload: "true"          
    spec:
      #securityContext:
      #  runAsNonRoot: true
      #  runAsUser: 1234
      containers:
      - name: webhook-calm-server
        image: docker.io/littlebull/webhook-calm:v3
        imagePullPolicy: Always
        ports:
        - containerPort: 443
          name: webhook-api
        volumeMounts:
        - name: webhook-tls-certs
          mountPath: /etc/kubernetes/pki
          readOnly: true
      volumes:
      - hostPath:
          path: /etc/kubernetes/pki
        name: webhook-tls-certs
---
apiVersion: v1
kind: Service
metadata:
  name: webhook-calm-server
  namespace: default
spec:
  selector:
    app: webhook-calm-server
  ports:
    - port: 443
      targetPort: webhook-api
---
apiVersion: admissionregistration.k8s.io/v1beta1
kind: MutatingWebhookConfiguration
metadata:
  name: webhook-calm
webhooks:
  - name: webhook-calm-server.default.svc
    clientConfig:
      service:
        name: webhook-calm-server
        namespace: default
        path: "/mutate"
      caBundle: CA_BUNDLE
    rules:
      - operations: [ "CREATE", "UPDATE", "DELETE", "CONNECT" ]
        apiGroups: ["apps", "extensions", "autoscaling"]
        apiVersions: ["v1", "v1beta1", "autoscaling/v1", "autoscaling/v2beta1", "autoscaling/v2beta2"]
        resources: ["pods", "deployments", "deployments/*", "services", "statefulsets", "horizontalpodautoscalers"]    